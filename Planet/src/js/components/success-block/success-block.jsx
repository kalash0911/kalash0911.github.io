import React, { useState } from "react";
import { useForm } from "react-hook-form";
import { yupResolver } from "@hookform/resolvers/yup";
import { Field } from "../shared/field/field.jsx";
import { maskPhoneNumber } from "../../utils/general.js";
import { validationSchema } from "./validation.js";

export const SuccessBlock = ({ backToTest, submitForm, phone }) => {
  const defaultValues = {
    phone: phone || "",
    skype: "",
    zoom: "",
  };

  const {
    register,
    setValue,
    formState: { errors },
  } = useForm({
    mode: "onTouched",
    defaultValues,
    resolver: yupResolver(validationSchema),
  });

  const [comunicationOptions, setComunicationOptions] = useState([
    {
      id: 1,
      name: "phone",
      active: true,
      label: "По номеру телефона",
      activeLabel: "Вы указали номер ",
      value: defaultValues.phone,
      placeholder: "Напишите свой номер телефона",
      isEdit: !defaultValues.phone,
    },
    {
      id: 2,
      name: "skype",
      active: false,
      label: "Связаться по Skype",
      activeLabel: "Вы указали логин",
      value: defaultValues.skype,
      placeholder: "Напишите свой логин Skype",
      isEdit: !defaultValues.skype,
    },
    {
      id: 3,
      name: "zoom",
      active: false,
      label: "Связаться в Zoom",
      activeLabel: "Вы указали zoom",
      value: defaultValues.zoom,
      placeholder: "Напишите свой логин Zoom",
      isEdit: !defaultValues.zoom,
    },
  ]);

  const isSubmitBtnEnabled = comunicationOptions.find((option) => {
    if (
      option.active &&
      option.value &&
      !errors[option.name] &&
      !option.isEdit
    ) {
      return option;
    }
  });

  const openEditOptionValue = (ind) => {
    const options = [...comunicationOptions];
    options[ind].isEdit = true;
    setComunicationOptions(options);
  };

  const handleValueChange = (e, ind, name) => {
    let value = e.target.value;
    const options = [...comunicationOptions];
    if (name === "phone") {
      value = maskPhoneNumber(value.replace(/\D/g, ""));
    }
    options[ind].value = value;
    setComunicationOptions(options);
    setValue(name, value);
  };

  const handleDoneOnClick = (ind) => {
    const options = [...comunicationOptions];
    options[ind].isEdit = false;
    setComunicationOptions(options);
  };

  const handleChangeOption = (ind) => {
    const options = [...comunicationOptions];
    options.forEach((el) => (el.active = false));
    options[ind].active = true;
    setComunicationOptions(options);
  };

  const onSubmit = () => {
    const comunicationMethod = comunicationOptions.find(
      (option) => option.active && option.value
    );
    submitForm({
      comunicationMethod: {
        name: comunicationMethod.name,
        contact: comunicationMethod.value,
      },
    });
  };

  const feedBackOptionItems = comunicationOptions.map(
    (
      { label, id, active, value, placeholder, activeLabel, isEdit, name },
      ind
    ) => {
      return (
        <div key={id} className="feedback-option">
          <div
            className={`answer-option ${active ? "active" : ""}`}
            onClick={() => handleChangeOption(ind)}
          >
            <p>{label}</p>
          </div>
          {active && !isEdit && (
            <div>
              <span>
                {activeLabel} {value}
              </span>
              <button
                className="btn btn-link"
                onClick={() => openEditOptionValue(ind)}
              >
                Изменить
              </button>
            </div>
          )}
          {active && isEdit && (
            <div className="input-row">
              <Field
                placeholder={placeholder}
                registerLabel={name}
                register={register}
                errors={errors}
                onChange={(e) => handleValueChange(e, ind, name)}
              />
              <button
                onClick={() => handleDoneOnClick(ind)}
                disabled={!!errors[name] || !value}
                className="btn btn-icon"
              >
                <span className="icon">
                  <svg
                    width="16"
                    height="10"
                    viewBox="0 0 16 10"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M15.036 0.299248C15.3777 0.640953 15.3777 1.19498 15.036 1.53668L6.86933 9.70332C6.52762 10.045 5.97368 10.045 5.63193 9.70332L0.965263 5.03665C0.623558 4.69493 0.623558 4.141 0.965263 3.79928C1.30697 3.45757 1.861 3.45757 2.2027 3.79928L6.25065 7.84715L13.7986 0.299248C14.1403 -0.0424575 14.6943 -0.0424575 15.036 0.299248Z"
                      fill="#2758B7"
                    />
                  </svg>
                </span>
              </button>
            </div>
          )}
        </div>
      );
    }
  );

  return (
    <div className="success-block">
      <div className="heading">
        <div className="success-img">
          <svg
            width="72"
            height="73"
            viewBox="0 0 72 73"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M62.8822 65.2629C62.8822 66.2406 62.0819 67.0408 61.1043 67.0408C60.1267 67.0408 59.3265 66.2406 59.3265 65.2629C59.3265 64.2853 60.1267 63.4851 61.1043 63.4851C62.0819 63.4851 62.8822 64.2853 62.8822 65.2629ZM44.1265 64.2852C43.1488 64.2852 42.3486 65.0855 42.3486 66.0631C42.3486 67.0407 43.1488 67.841 44.1265 67.841C45.1041 67.841 45.9043 67.0407 45.9043 66.0631C45.815 64.9961 45.1041 64.2852 44.1265 64.2852ZM22.2593 44.8181C21.2816 44.8181 20.4815 45.6183 20.4815 46.596C20.4815 47.5736 21.2817 48.3738 22.2593 48.3738C23.2369 48.3738 24.0372 47.5736 24.0372 46.596C24.0372 45.6177 23.2369 44.8181 22.2593 44.8181ZM69.7265 49.7958C68.7488 49.7958 67.9486 50.596 67.9486 51.5737C67.9486 52.5513 68.7488 53.3515 69.7265 53.3515C70.7041 53.3515 71.5043 52.5513 71.5043 51.5737C71.5043 50.5954 70.7041 49.7958 69.7265 49.7958ZM39.505 28.4615C39.505 29.4392 40.3053 30.2394 41.2829 30.2394C42.2605 30.2394 43.0607 29.4392 43.0607 28.4615C43.0607 27.4839 42.2605 26.6837 41.2829 26.6837C40.3052 26.6842 39.505 27.4839 39.505 28.4615ZM56.4822 15.4838C57.4599 15.4838 58.26 14.6836 58.26 13.706C58.26 12.7283 57.4598 11.9281 56.4822 11.9281C55.5045 11.9281 54.7043 12.7283 54.7043 13.706C54.7043 14.6842 55.5045 15.4838 56.4822 15.4838ZM64.6602 31.6624C63.6825 31.6624 62.8823 32.4626 62.8823 33.4402C62.8823 34.4179 63.6825 35.2181 64.6602 35.2181C65.6378 35.2181 66.438 34.4179 66.438 33.4402C66.438 32.462 65.5491 31.6624 64.6602 31.6624ZM24.0373 25.9732C25.015 25.9732 25.8152 25.173 25.8152 24.1954C25.8152 23.2178 25.0149 22.4175 24.0373 22.4175C23.0597 22.4175 22.2595 23.2178 22.2595 24.1954C22.2595 25.1736 23.0597 25.9732 24.0373 25.9732ZM27.5039 4.55181C28.4816 4.55181 29.2817 3.75158 29.2817 2.77395C29.2817 1.79632 28.4815 0.996094 27.5039 0.996094C26.5263 0.996094 25.726 1.79632 25.726 2.77395C25.726 3.75158 26.5263 4.55181 27.5039 4.55181ZM14.5262 36.5518C14.5262 37.5295 15.3264 38.3297 16.304 38.3297C17.2817 38.3297 18.0819 37.5294 18.0819 36.5518C18.0819 35.5742 17.2817 34.774 16.304 34.774C15.3258 34.774 14.5262 35.5742 14.5262 36.5518ZM14.5262 14.329C15.5039 14.329 16.304 13.5287 16.304 12.5511C16.304 11.5735 15.5038 10.7732 14.5262 10.7732C13.5485 10.7732 12.7483 11.5735 12.7483 12.5511C12.7483 13.5293 13.5485 14.329 14.5262 14.329ZM2.34817 51.2175C1.37048 51.2175 0.570312 52.0178 0.570312 52.9954C0.570312 53.973 1.37054 54.7732 2.34817 54.7732C3.3258 54.7732 4.12603 53.973 4.12603 52.9954C4.0373 52.0177 3.23707 51.2175 2.34817 51.2175ZM33.8153 12.4618C33.6373 11.2174 34.1708 10.0617 35.2377 9.43952C36.3041 8.81731 37.6379 8.99532 38.6156 9.79499C38.8823 9.97301 39.1491 10.3285 39.4158 10.7727C39.5046 9.52826 38.9716 8.10582 37.9047 6.59468C37.6379 6.23921 37.7267 5.70572 38.0827 5.43899C38.4382 5.17225 38.9717 5.26098 39.2384 5.61701C42.0827 9.61701 40.927 12.3726 40.3048 13.3503C40.3048 13.3503 40.3048 13.439 40.2161 13.439C40.3941 14.8614 40.2161 16.8169 39.4158 19.4836C39.3271 19.8391 38.9716 20.1058 38.6156 20.1058H38.3489C37.9047 19.9278 37.6379 19.4836 37.8154 19.0394C38.3489 17.3508 38.5263 16.0171 38.6156 14.9507C37.9047 15.2174 37.0157 15.3954 36.1267 15.1287C34.8823 14.862 33.9933 13.8843 33.8153 12.4618L33.8153 12.4618ZM35.5932 12.2844C35.6819 12.9953 36.0374 13.44 36.5709 13.5288C37.1043 13.6175 37.9933 13.44 38.6154 12.9066C38.3487 11.8402 37.9045 11.3954 37.6377 11.218C37.371 10.9512 37.0155 10.8625 36.7488 10.8625C36.482 10.8625 36.3046 10.9512 36.1266 11.0405C35.6824 11.2174 35.5044 11.6622 35.5931 12.2844L35.5932 12.2844ZM65.8146 41.7958C65.6366 42.24 65.1036 42.418 64.6589 42.24C57.281 39.2177 50.0818 41.2623 45.9032 43.1289C46.7034 44.1066 47.3256 45.0844 47.9478 46.0625C50.4366 45.1736 52.3919 45.8845 53.3702 46.3293C53.9037 46.596 54.3479 46.8627 54.7926 47.2182C56.5705 46.5073 59.1481 46.0625 62.2592 46.1518C62.7034 46.1518 63.1482 46.5073 63.1482 47.0408C63.1482 47.485 62.7927 47.9297 62.2592 47.9297H61.9925C59.1482 47.9297 57.2815 48.2852 56.037 48.6407C56.926 49.7964 57.3702 51.1295 57.1034 52.1965C56.8367 53.1742 56.1257 53.7964 54.97 53.7964C53.7256 53.7964 52.6586 53.1742 52.0364 52.1965C51.5029 51.3076 51.5029 50.2411 52.0364 49.3522C52.3032 48.908 52.5699 48.552 53.0141 48.1966C52.8361 48.1078 52.6586 48.0185 52.4806 47.9298C51.2362 47.3076 49.9918 47.2189 48.6586 47.5743C50.6141 51.1302 51.3255 54.1519 49.8143 55.7523C49.6363 55.9304 49.3701 56.1078 49.1034 56.2858L49.0146 56.3746C48.7479 56.4633 19.9489 68.6413 12.5704 71.9303C12.1262 72.1083 11.6814 72.197 11.2372 72.197C9.54864 72.197 8.21493 70.8639 8.21493 69.1747C8.21493 68.8193 8.30365 68.3745 8.48167 68.019L22.1702 29.9748C22.1702 29.9748 22.1702 29.886 22.259 29.886C22.437 29.4418 22.6144 29.0858 22.8812 28.8196C24.481 27.1311 27.8589 28.1087 31.6815 30.3308C31.5927 26.9529 31.0593 23.3972 29.37 20.7309C28.0369 18.5975 26.081 17.1751 23.5922 16.6422C23.148 16.5535 22.792 16.1087 22.97 15.6645C23.0587 15.2203 23.5035 14.8643 23.9477 15.0423C26.9699 15.6645 29.2808 17.2644 30.8812 19.8426C32.9258 23.1316 33.5481 27.5759 33.4588 31.4872C35.9477 33.1757 38.6145 35.3984 40.9254 37.7093C42.1698 38.9537 43.4142 40.3762 44.5699 41.7093C48.9254 39.6647 56.8367 37.1759 65.1028 40.6429C65.8137 40.9074 65.9917 41.3516 65.8137 41.7964L65.8146 41.7958ZM53.7259 51.3956C53.9926 51.8398 54.5261 52.1066 55.1483 52.1066C55.5038 52.1066 55.5925 52.0179 55.5925 51.8398C55.6812 51.3956 55.3258 50.3287 54.5261 49.4397C53.9926 49.7952 53.8152 50.0619 53.7259 50.2399C53.5484 50.7734 53.6372 51.1289 53.7259 51.3956V51.3956ZM45.3705 56.1959C44.5702 55.9292 43.5926 55.485 42.6149 54.9515C39.3259 53.2629 35.6813 50.3294 32.126 46.8628C28.6595 43.3962 25.7259 39.6631 24.0373 36.3739C23.5931 35.485 23.2371 34.6854 22.8816 33.8851L10.3482 68.7294V68.8181C10.3482 68.9068 10.2595 69.0848 10.2595 69.1736C10.2595 69.8845 10.793 70.418 11.5039 70.418C11.6819 70.418 11.7706 70.418 11.9481 70.3293L12.1261 70.2405H12.2148C18.2594 67.663 37.5491 59.485 45.3705 56.1964L45.3705 56.1959ZM44.3928 43.9292C43.1484 44.6402 42.3482 45.1736 42.3482 45.1736C42.1702 45.2624 41.9927 45.3516 41.8147 45.3516C41.548 45.3516 41.2812 45.2629 41.1038 44.9962C40.837 44.6407 40.9258 44.1072 41.2818 43.8405C41.3705 43.7518 42.082 43.307 43.2372 42.6848C42.2595 41.5291 41.1926 40.2847 39.9482 39.1289C37.7261 36.9068 35.5928 35.1289 33.6368 33.7065C33.37 37.7065 32.6591 40.9062 32.5704 41.1731C32.4817 41.5286 32.1262 41.7953 31.7702 41.7953H31.5921C31.1479 41.7066 30.8812 41.2618 30.9699 40.7289C30.9699 40.6402 31.8589 36.9956 32.0363 32.5509C29.192 30.773 26.9699 29.884 25.5475 29.884C25.014 29.884 24.6585 29.9728 24.3918 30.2395C23.8583 30.773 23.8583 32.5509 25.5475 35.7507C27.236 38.8617 29.9916 42.4175 33.3695 45.7952C36.7473 49.1731 40.303 51.9287 43.414 53.6172C46.6138 55.3058 48.3918 55.3058 48.9252 54.7729C49.7254 53.9727 49.1919 51.6619 47.414 48.5508C46.3476 49.173 45.2806 50.0619 44.2143 51.3063C43.9476 51.6618 43.3254 51.7505 42.9699 51.3951C42.6144 51.1283 42.5257 50.5061 42.8812 50.1507C44.1256 48.6395 45.37 47.6618 46.437 47.0397C45.9041 45.9733 45.1926 44.9955 44.3929 43.9292L44.3928 43.9292ZM41.8146 33.9734C41.9926 34.1514 42.1701 34.2401 42.4368 34.2401C42.7036 34.2401 42.881 34.1514 43.0591 33.9734C52.1255 24.6402 52.3035 14.2405 52.3035 13.7948C52.3035 13.3506 51.948 12.9058 51.4145 12.9058C50.9703 12.9058 50.5256 13.2613 50.5256 13.7948C50.5256 13.8835 50.3476 24.0169 41.8146 32.8176C41.4591 33.0844 41.4591 33.6179 41.8146 33.9733L41.8146 33.9734ZM70.526 20.9069C68.0372 27.4845 64.7482 28.1959 62.9702 28.0179C62.7922 28.0179 62.7035 28.0179 62.526 27.9292C61.1929 28.9956 59.237 30.0626 56.2146 31.1289C56.1258 31.1289 56.0366 31.2176 55.9478 31.2176C55.5924 31.2176 55.2369 30.9509 55.1476 30.5954C54.9696 30.1512 55.2363 29.6177 55.6811 29.529C57.9032 28.8181 59.5031 28.0179 60.6588 27.2176C59.7698 26.5067 59.1477 25.529 58.9702 24.64C58.7035 23.3956 59.3257 22.2399 60.4814 21.7065C61.6371 21.0842 62.9702 21.173 63.8592 21.7952C64.6595 22.4174 65.1036 23.395 64.9256 24.462C64.8369 24.9062 64.6589 25.5284 64.2147 26.2399C65.9925 25.7064 67.6813 23.6623 68.9257 20.2845C69.1037 19.8403 69.6366 19.6622 69.9921 19.751C70.5261 19.929 70.7036 20.4619 70.5261 20.9067L70.526 20.9069ZM62.8815 23.1291C62.7035 22.9511 62.4373 22.9511 62.1705 22.9511C61.9038 22.9511 61.5483 23.0398 61.2816 23.2178C60.8374 23.4845 60.6594 23.84 60.7481 24.2842C60.8368 24.9064 61.3703 25.6173 62.1705 25.9728C62.8815 25.2618 63.1482 24.6396 63.2369 24.1062C63.3257 23.7513 63.2369 23.3958 62.8814 23.1291L62.8815 23.1291Z"
              fill="#4D7DD9"
            />
          </svg>
        </div>
        <h2 className="main-title">Поздравляем! Вы прошли тест.</h2>
        <p className="subtitle">
          Чтобы наш специалист смог с вами связаться для проведения бесплатной
          личной консультации выберите пожалуйста удобный для Вас способ связи:
        </p>
      </div>
      <div className="feedback">{feedBackOptionItems}</div>
      <div className="btns-wrap">
        <button className="btn btn-text" onClick={backToTest}>
          Вернуться к тесту
        </button>
        <button
          className="btn btn-text"
          onClick={onSubmit}
          disabled={!isSubmitBtnEnabled}
        >
          Продолжить
        </button>
      </div>
    </div>
  );
};
