{"version":3,"sources":["main.js"],"names":["progressCircle","document","querySelector","addEventListener","initCounter","statWrapEl","initStart","maxNumbersElArr","querySelectorAll","window","isVisible","classList","add","forEach","el","maxNumber","Number","textContent","startCount","intervalId","setInterval","clearInterval","formatNumber","elem","coords","getBoundingClientRect","windowHeight","documentElement","clientHeight","topVisible","top","bottomVisible","bottom","number","toString","replace","onEntry","entry","change","isIntersecting","target","options","threshold","observer","IntersectionObserver","elements","elm","observe"],"mappings":";;;;;;;;AAAA,IAAMA,cAAc,GAAGC,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,CAAvB;AAEAD,QAAQ,CAACE,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClDC,EAAAA,WAAW;AACZ,CAFD;;AAIA,SAASA,WAAT,GAAuB;AACrB,MAAIC,UAAU,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAAjB;AACA,MAAII,SAAS,GAAG,KAAhB;AACA,MAAIC,eAAe,GAAGN,QAAQ,CAACO,gBAAT,CAA0B,UAA1B,CAAtB;AAEAC,EAAAA,MAAM,CAACN,gBAAP,CAAwB,QAAxB,EAAkC,YAAM;AACpC,QAAGO,SAAS,CAACL,UAAD,CAAT,IAAyB,CAACC,SAA7B,EAAwC;AACtCN,MAAAA,cAAc,CAACW,SAAf,CAAyBC,GAAzB,CAA6B,iBAA7B;AACEN,MAAAA,SAAS,GAAG,IAAZ;AACAC,MAAAA,eAAe,CAACM,OAAhB,CAAwB,UAACC,EAAD,EAAQ;AAC5B,YAAMC,SAAS,GAAGC,MAAM,CAACF,EAAE,CAACG,WAAJ,CAAxB;AACA,YAAIC,UAAU,GAAG,IAAjB;AACA,YAAIC,UAAU,GAAGC,WAAW,CAAC,YAAM;AAC/B,cAAGF,UAAU,GAAGH,SAAhB,EAA2B;AACvBG,YAAAA,UAAU,IAAI,EAAd;;AACA,gBAAIA,UAAU,GAAGH,SAAjB,EAA4B;AACxBG,cAAAA,UAAU,GAAGH,SAAb;AACAM,cAAAA,aAAa,CAACF,UAAD,CAAb;AACH;;AACDL,YAAAA,EAAE,CAACG,WAAH,GAAiBK,YAAY,CAACJ,UAAD,CAA7B;AACH;AACJ,SAT2B,EASzB,EATyB,CAA5B;AAUH,OAbD;AAcH;AACJ,GAnBD;AAoBD;;AAED,SAASR,SAAT,CAAmBa,IAAnB,EAAyB;AAEvB,MAAIC,MAAM,GAAGD,IAAI,CAACE,qBAAL,EAAb;AAEA,MAAIC,YAAY,GAAGzB,QAAQ,CAAC0B,eAAT,CAAyBC,YAA5C;AAEA,MAAIC,UAAU,GAAGL,MAAM,CAACM,GAAP,GAAa,CAAb,IAAkBN,MAAM,CAACM,GAAP,GAAaJ,YAAhD;AAEA,MAAIK,aAAa,GAAGP,MAAM,CAACQ,MAAP,GAAgBN,YAAhB,IAAgCF,MAAM,CAACQ,MAAP,GAAgB,CAApE;AAEA,SAAOH,UAAU,IAAIE,aAArB;AACD;;AAED,SAAST,YAAT,CAAsBW,MAAtB,EAA8B;AAC5B,SAAOA,MAAM,CAACC,QAAP,GAAkBC,OAAlB,CAA0B,uBAA1B,EAAmD,GAAnD,CAAP;AACD;;AAAA;;AAGD,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpBA,EAAAA,KAAK,CAACxB,OAAN,CAAc,UAAAyB,MAAM,EAAI;AACpB,QAAIA,MAAM,CAACC,cAAX,EAA2B;AAC3BD,MAAAA,MAAM,CAACE,MAAP,CAAc7B,SAAd,CAAwBC,GAAxB,CAA4B,cAA5B;AACC;AACJ,GAJD;AAKH;;AAED,IAAI6B,OAAO,GAAG;AAAEC,EAAAA,SAAS,EAAE,CAAC,GAAD;AAAb,CAAd;AACA,IAAIC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBR,OAAzB,EAAkCK,OAAlC,CAAf;AACA,IAAII,QAAQ,GAAG5C,QAAQ,CAACO,gBAAT,CAA0B,oBAA1B,CAAf;;2CACgBqC,Q;;;;AAAhB,sDAA0B;AAAA,QAAjBC,GAAiB;AACtBH,IAAAA,QAAQ,CAACI,OAAT,CAAiBD,GAAjB;AACH","sourcesContent":["const progressCircle = document.querySelector('.progress-content');\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  initCounter();\r\n});\r\n\r\nfunction initCounter() {\r\n  let statWrapEl = document.querySelector('.init-progress');\r\n  let initStart = false;\r\n  let maxNumbersElArr = document.querySelectorAll('.yer > p');\r\n\r\n  window.addEventListener('scroll', () => {\r\n      if(isVisible(statWrapEl) && !initStart) {\r\n        progressCircle.classList.add('progress_active');\r\n          initStart = true;\r\n          maxNumbersElArr.forEach((el) => {\r\n              const maxNumber = Number(el.textContent);\r\n              let startCount = 1308;\r\n              let intervalId = setInterval(() => {\r\n                  if(startCount < maxNumber) {\r\n                      startCount += 10;\r\n                      if (startCount > maxNumber) {\r\n                          startCount = maxNumber;\r\n                          clearInterval(intervalId);\r\n                      }\r\n                      el.textContent = formatNumber(startCount);\r\n                  } \r\n              }, 20)\r\n          })\r\n      } \r\n  });\r\n}\r\n\r\nfunction isVisible(elem) {\r\n\r\n  let coords = elem.getBoundingClientRect();\r\n\r\n  let windowHeight = document.documentElement.clientHeight;\r\n\r\n  let topVisible = coords.top > 0 && coords.top < windowHeight;\r\n\r\n  let bottomVisible = coords.bottom < windowHeight && coords.bottom > 0;\r\n\r\n  return topVisible || bottomVisible;\r\n}\r\n\r\nfunction formatNumber(number) {\r\n  return number.toString().replace(/\\B(?=(\\d{0})+(?!\\d))/g, \",\");\r\n};\r\n\r\n\r\nfunction onEntry(entry) {\r\n    entry.forEach(change => {\r\n        if (change.isIntersecting) {\r\n        change.target.classList.add('element-show');\r\n        }\r\n    });\r\n}\r\n\r\nlet options = { threshold: [0.5] };\r\nlet observer = new IntersectionObserver(onEntry, options);\r\nlet elements = document.querySelectorAll('.element-animation');\r\nfor (let elm of elements) {\r\n    observer.observe(elm);\r\n}"],"file":"main.js"}