{"version":3,"sources":["main.js"],"names":["window","addEventListener","event","initStickyPhone","startSection","document","querySelector","phonesWrapper","phoneContent","phoneImgs","querySelectorAll","steps","stepsReact","reduce","prev","cur","ind","stepRect","getBoundingClientRect","sectionRect","forEach","img","style","zIndex","phoneWrapDesctination","height","phoneContentHeight","gsap","fromTo","x","rotation","scrollTrigger","trigger","start","end","scrub","pin","onEnter","y","onUpdate","self","filterValue","progress","toFixed","filter","callback","entries","observer","entry","isIntersecting","kidsAnimation","play","createObserver","target","options","root","threshold","IntersectionObserver","observe"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASI,QAAT,CAAkBC,OAAlB,EAA2BC,QAA3B,EAAqC;AACnCD,EAAAA,OAAO,CAAC1B,OAAR,CAAgB,UAAC4B,KAAD,EAAW;AACzB,QAAIA,KAAK,CAACC,cAAV,EAA0B;AACxBC,MAAAA,aAAa,CAAC,CAAD,CAAb,CAAiBC,IAAjB;AACD;AACF,GAJD;AAKD;;AACD,SAASC,cAAT,CAAwBC,MAAxB,EAAgCR,QAAhC,EAA0C;AACxC,MAAMS,OAAO,GAAG;AACdC,IAAAA,IAAI,EAAE,IADQ;AAEdC,IAAAA,SAAS,EAAE;AAFG,GAAhB;AAIA,MAAMT,QAAQ,GAAG,IAAIU,oBAAJ,CAAyBZ,QAAzB,EAAmCS,OAAnC,CAAjB;AACAP,EAAAA,QAAQ,CAACW,OAAT,CAAiBL,MAAjB;AACD,C,CAED","sourcesContent":["window.addEventListener(\"load\", (event) => {\r\n  initStickyPhone();\r\n});\r\n\r\nfunction initStickyPhone() {\r\n  const startSection = document.querySelector(\".phone-section\");\r\n  const phonesWrapper = startSection.querySelector('.sticky-phones-wrapper');\r\n  const phoneContent = phonesWrapper.querySelector('.sticky-phones-content');\r\n  // const kidsWrapper = startSection.querySelector('.sticky-kids-wrapper');\r\n  // const kidsContent = startSection.querySelector('.sticky-kids-content');\r\n  const phoneImgs = phoneContent.querySelectorAll('img');\r\n  // const kidsElements = kidsContent.querySelectorAll('[id*=kids_anim]');\r\n  const steps = document.querySelectorAll('.steps li');\r\n  const stepsReact = [...steps].reduce((prev, cur, ind) => {\r\n    const stepRect = cur.getBoundingClientRect();\r\n    prev[`${ind}`] = stepRect;\r\n    return prev;\r\n  }, {})\r\n  const sectionRect = startSection.getBoundingClientRect();\r\n  phoneImgs.forEach((img, ind) => img.style.zIndex = `${ind}`);\r\n  // kidsElements.forEach((el, ind) => el.style.zIndex = `${ind}`);\r\n\r\n\r\n  const phoneWrapDesctination = sectionRect.height - stepsReact[0].height;\r\n  const phoneContentHeight = phonesWrapper.getBoundingClientRect().height;\r\n  // phoneContent.style.height = `${phoneContentHeight - 10}px`;\r\n\r\n  // Phone wrapper scroll anim\r\n  gsap.fromTo(\r\n    phonesWrapper,\r\n    {\r\n      x: 5,\r\n      rotation: 3,\r\n      // skewX: -2,\r\n    },\r\n    {\r\n      x: -5,\r\n      rotation: -3,\r\n      // skewX: 2,\r\n      scrollTrigger: {\r\n        trigger: steps[0].querySelector('.title'),\r\n        start: `50% center`,\r\n        end: `${phoneWrapDesctination} center`,\r\n        scrub: 0.5,\r\n        // markers: true,\r\n        pin: phonesWrapper,\r\n        onEnter: () => {\r\n          // kidsAnimation[0].play();\r\n        }\r\n      },\r\n    }\r\n  );\r\n\r\n  //Kids wrapper scroll anim\r\n  // gsap.fromTo(\r\n  //   kidsWrapper,\r\n  //   {\r\n  //     x: 0,\r\n  //   },\r\n  //   {\r\n  //     x: 0,\r\n  //     scrollTrigger: {\r\n  //       trigger: phonesWrapper,\r\n  //       start: `${stepsReact[0].height}-=250px center`,\r\n  //       end: `${phoneWrapDesctination} center`,\r\n  //       scrub: 0.5,\r\n  //       // markers: true,\r\n  //       pin: kidsWrapper,\r\n  //       onEnter: () => {\r\n  //         kidsAnimation[0].play()\r\n  //       }\r\n  //     },\r\n  //   }\r\n  // );\r\n\r\n  // Content images scroll anim\r\n  phoneImgs.forEach((img, ind) => {\r\n    if (ind > 0) {\r\n      gsap.fromTo(\r\n        img,\r\n        {\r\n          x: 0,\r\n          y: -phoneContentHeight,\r\n          rotation: 0,\r\n        },\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n          rotation: 0,\r\n          scrollTrigger: {\r\n            trigger: steps[ind],\r\n            start: `65% 80%-${phoneContentHeight}`,\r\n            end: `bottom+=20% 85%`,\r\n            scrub: 1,\r\n            // markers: true,\r\n            onUpdate: (self) => {\r\n              const filterValue = self.progress.toFixed(3) * 20;\r\n              phoneImgs[ind - 1].style.filter = `blur(${filterValue}px)`;\r\n              // if(self.progress < 0.1) {\r\n              //   kidsAnimation[ind].pause();\r\n              // } else {\r\n              //   if(kidsAnimation[ind].isPaused) {\r\n              //     kidsAnimation[ind].play();\r\n              //   } \r\n              // }\r\n            },\r\n            // onLeave: (self) => {\r\n            //   kidsAnimation[ind].play();\r\n            //   kidsAnimation[ind-1].pause();\r\n            // },\r\n            // onEnterBack: () => {\r\n            //   kidsAnimation[ind-1].play();\r\n            // }\r\n          },\r\n        }\r\n      )\r\n    }\r\n  });\r\n\r\n  // Kids anim scroll sticky\r\n  //  kidsElements.forEach((el, ind) => {\r\n  //   if (ind > 0) {\r\n  //     gsap.fromTo(\r\n  //       el,\r\n  //       {\r\n  //         x: 0,\r\n  //         y: -500,\r\n  //         rotation: 0,\r\n  //       },\r\n  //       {\r\n  //         x: 0,\r\n  //         y: 0,\r\n  //         rotation: 0,\r\n  //         scrollTrigger: {\r\n  //           trigger: steps[ind],\r\n  //           start: `75% 80%-${500}`,\r\n  //           end: `bottom+=10% 85%`,\r\n  //           scrub: 1,\r\n  //           // markers: true,\r\n  //           onUpdate: (self) => {\r\n  //             const filterValue = self.progress.toFixed(3) * 20;\r\n  //             kidsElements[ind - 1].style.filter = `blur(${filterValue}px)`;\r\n  //             kidsElements[ind - 1].style.opacity = `${1 - self.progress}`;\r\n  //             if(self.progress !== 1) {\r\n  //               kidsAnimation[ind].pause();\r\n  //             }\r\n  //           },\r\n  //           onLeave: (self) => {\r\n  //             kidsAnimation[ind].play();\r\n  //           },\r\n  //         },\r\n  //       }\r\n  //     )\r\n  //   }\r\n  // });\r\n}\r\n\r\n// const kidsAnimation = new Array(5).fill('kids_anim').map((elem, ind, arr) => {\r\n//   let animLoadCounter = 0;\r\n//   let totalDuration = 0;\r\n//   const anim = bodymovin.loadAnimation({\r\n//     container: document.getElementById(`${elem}_${ind + 1}`),\r\n//     path: `./files/anim_${ind + 1}.json`,\r\n//     render: \"svg\",\r\n//     loop: true,\r\n//     autoplay: false,\r\n//   });\r\n//   anim.addEventListener(\"DOMLoaded\", () => {\r\n//     animLoadCounter += 1;\r\n//     anim.stop();\r\n//     if (animLoadCounter === arr.length) {\r\n//       totalDuration = kidsAnimation.reduce((prev, cur, ind) => {\r\n//         cur.onComplete = () => {\r\n//           // anim complete cb\r\n//         };\r\n//         return (prev += cur.getDuration());\r\n//       }, 0);\r\n//     }\r\n//   });\r\n//   return anim;\r\n// });\r\n\r\nfunction callback(entries, observer) {\r\n  entries.forEach((entry) => {\r\n    if (entry.isIntersecting) {\r\n      kidsAnimation[0].play();\r\n    }\r\n  });\r\n}\r\nfunction createObserver(target, callback) {\r\n  const options = {\r\n    root: null,\r\n    threshold: 0,\r\n  };\r\n  const observer = new IntersectionObserver(callback, options);\r\n  observer.observe(target);\r\n}\r\n\r\n// createObserver(document.querySelector('#kids_anim_1'), callback);"],"file":"main.js"}