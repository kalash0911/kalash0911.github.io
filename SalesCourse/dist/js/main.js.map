{"version":3,"sources":["main.js"],"names":["WOW","init","initVideoPlayers","videoWraps","document","querySelectorAll","forEach","videoWrap","video","querySelector","playButton","addEventListener","e","paused","play","classList","toggle","pause","onEntry","entry","change","isIntersecting","target","add","options","threshold","observer","IntersectionObserver","elements","elm","observe","length","entries","getAttribute","element","count","parseInt","innerText","currentCount","speed","step","interval","setInterval","clearInterval","setAttribute","window","section","getElementById","paralax","windowHeight","innerHeight","sectionBottom","getBoundingClientRect","bottom","translateY","Math","max","style","transform"],"mappings":"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","sourcesContent":["new WOW().init();\r\n\r\n// Video controls\r\ninitVideoPlayers();\r\n\r\nfunction initVideoPlayers() {\r\n  const videoWraps = document.querySelectorAll(\".video-wrap\");\r\n  videoWraps?.forEach((videoWrap) => {\r\n    const video = videoWrap.querySelector(\".video\");\r\n    const playButton = videoWrap.querySelector(\".play-button\");\r\n\r\n    //Play and Pause button\r\n    playButton.addEventListener(\"click\", (e) => {\r\n      if (video.paused) {\r\n        video.play();\r\n        videoWrap.classList.toggle(\"active\");\r\n      } else {\r\n        video.pause();\r\n        videoWrap.classList.toggle(\"active\");\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n/* castom anim */\r\nfunction onEntry(entry) {\r\n  entry.forEach(change => {\r\n    if (change.isIntersecting) {\r\n      change.target.classList.add('show');\r\n    }\r\n  });\r\n}\r\nlet options = { threshold: [0.5] };\r\nlet observer = new IntersectionObserver(onEntry, options);\r\nlet elements = document.querySelectorAll('.anim');\r\nfor (let elm of elements) {\r\n  observer.observe(elm);\r\n}\r\n\r\n// For counter animate\r\nif (document.querySelectorAll('.count-progress').length) {\r\n  // создаем экземпляр Intersection Observer\r\n  const observer = new IntersectionObserver(entries => {\r\n    entries.forEach(entry => {\r\n      // если элемент стал видимым и его анимация еще не проигрывалась, запускаем анимацию\r\n      if (entry.isIntersecting && entry.target.getAttribute('data-animated') === 'false') {\r\n        const element = entry.target;\r\n        const count = parseInt(element.innerText);\r\n        let currentCount = 0;\r\n        const speed = parseInt(element.getAttribute('data-speed')) || 10; // считываем значение атрибута \"data-speed\" или устанавливаем значение по умолчанию\r\n        const step = parseInt(element.getAttribute('data-step')) || 1; // считываем значение атрибута \"data-step\" или устанавливаем значение по умолчанию\r\n        const interval = setInterval(() => {\r\n          if (currentCount < count) {\r\n            currentCount += step;\r\n            if (currentCount > count) {\r\n              currentCount = count;\r\n            }\r\n            element.innerText = currentCount;\r\n          } else {\r\n            clearInterval(interval);\r\n            element.setAttribute('data-animated', 'true'); // устанавливаем атрибут \"data-animated\" в значение \"true\"\r\n          }\r\n        }, speed);\r\n      }\r\n    });\r\n  });\r\n\r\n  // добавляем каждый элемент с классом \"count-progress\" в Observer\r\n  document.querySelectorAll('.count-progress').forEach(element => {\r\n    observer.observe(element);\r\n  });\r\n}\r\n\r\n\r\n// For Paralax\r\nwindow.addEventListener('scroll', function () {\r\n  const section = document.getElementById('paralax-sc');\r\n  const paralax = document.querySelector('.paralax');\r\n  const windowHeight = window.innerHeight;\r\n  const sectionBottom = section.getBoundingClientRect().bottom;\r\n\r\n  if (sectionBottom <= windowHeight && sectionBottom >= 0) {\r\n    const translateY = Math.max(0, (sectionBottom - windowHeight) / -windowHeight * 50);\r\n    paralax.style.transform = `translateY(${translateY}%)`;\r\n  }\r\n});"],"file":"main.js"}